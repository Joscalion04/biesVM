// Generated from grammar/bies.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,59,408,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,
1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,
1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,
1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,
15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,1,19,
1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,23,1,
23,1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,
1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,1,30,1,
30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,34,
1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,
38,1,38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,
1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,46,1,
46,1,47,3,47,298,8,47,1,47,4,47,301,8,47,11,47,12,47,302,1,48,3,48,306,8,
48,1,48,4,48,309,8,48,11,48,12,48,310,1,48,1,48,4,48,315,8,48,11,48,12,48,
316,3,48,319,8,48,1,48,1,48,3,48,323,8,48,1,48,4,48,326,8,48,11,48,12,48,
327,3,48,330,8,48,1,49,1,49,1,49,1,49,5,49,336,8,49,10,49,12,49,339,9,49,
1,49,1,49,1,49,1,49,1,49,5,49,346,8,49,10,49,12,49,349,9,49,1,49,3,49,352,
8,49,1,50,1,50,4,50,356,8,50,11,50,12,50,357,1,51,1,51,1,51,1,51,1,51,1,
52,1,52,1,52,1,52,1,52,1,53,4,53,371,8,53,11,53,12,53,372,1,53,1,53,1,54,
1,54,5,54,379,8,54,10,54,12,54,382,9,54,1,54,1,54,1,55,1,55,1,55,1,55,1,
55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,5,57,402,8,57,
10,57,12,57,405,9,57,1,58,1,58,0,0,59,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,
33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,
45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,
56,113,57,115,58,117,59,1,0,9,1,0,48,57,2,0,69,69,101,101,2,0,43,43,45,45,
2,0,39,39,92,92,2,0,34,34,92,92,3,0,9,10,13,13,32,32,2,0,10,10,13,13,3,0,
65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,425,0,1,1,0,0,0,0,3,1,0,
0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,
0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,
83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,
0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,
1,0,0,0,0,117,1,0,0,0,1,119,1,0,0,0,3,123,1,0,0,0,5,127,1,0,0,0,7,131,1,
0,0,0,9,135,1,0,0,0,11,139,1,0,0,0,13,143,1,0,0,0,15,147,1,0,0,0,17,151,
1,0,0,0,19,155,1,0,0,0,21,159,1,0,0,0,23,163,1,0,0,0,25,167,1,0,0,0,27,171,
1,0,0,0,29,174,1,0,0,0,31,177,1,0,0,0,33,181,1,0,0,0,35,184,1,0,0,0,37,188,
1,0,0,0,39,192,1,0,0,0,41,195,1,0,0,0,43,199,1,0,0,0,45,203,1,0,0,0,47,207,
1,0,0,0,49,211,1,0,0,0,51,215,1,0,0,0,53,219,1,0,0,0,55,223,1,0,0,0,57,227,
1,0,0,0,59,231,1,0,0,0,61,235,1,0,0,0,63,239,1,0,0,0,65,242,1,0,0,0,67,245,
1,0,0,0,69,248,1,0,0,0,71,252,1,0,0,0,73,256,1,0,0,0,75,260,1,0,0,0,77,264,
1,0,0,0,79,268,1,0,0,0,81,272,1,0,0,0,83,276,1,0,0,0,85,280,1,0,0,0,87,284,
1,0,0,0,89,288,1,0,0,0,91,292,1,0,0,0,93,294,1,0,0,0,95,297,1,0,0,0,97,305,
1,0,0,0,99,351,1,0,0,0,101,353,1,0,0,0,103,359,1,0,0,0,105,364,1,0,0,0,107,
370,1,0,0,0,109,376,1,0,0,0,111,385,1,0,0,0,113,393,1,0,0,0,115,399,1,0,
0,0,117,406,1,0,0,0,119,120,5,73,0,0,120,121,5,78,0,0,121,122,5,73,0,0,122,
2,1,0,0,0,123,124,5,72,0,0,124,125,5,76,0,0,125,126,5,84,0,0,126,4,1,0,0,
0,127,128,5,80,0,0,128,129,5,79,0,0,129,130,5,80,0,0,130,6,1,0,0,0,131,132,
5,83,0,0,132,133,5,87,0,0,133,134,5,80,0,0,134,8,1,0,0,0,135,136,5,76,0,
0,136,137,5,68,0,0,137,138,5,86,0,0,138,10,1,0,0,0,139,140,5,66,0,0,140,
141,5,76,0,0,141,142,5,68,0,0,142,12,1,0,0,0,143,144,5,66,0,0,144,145,5,
83,0,0,145,146,5,84,0,0,146,14,1,0,0,0,147,148,5,65,0,0,148,149,5,68,0,0,
149,150,5,68,0,0,150,16,1,0,0,0,151,152,5,77,0,0,152,153,5,85,0,0,153,154,
5,76,0,0,154,18,1,0,0,0,155,156,5,68,0,0,156,157,5,73,0,0,157,158,5,86,0,
0,158,20,1,0,0,0,159,160,5,83,0,0,160,161,5,85,0,0,161,162,5,66,0,0,162,
22,1,0,0,0,163,164,5,78,0,0,164,165,5,69,0,0,165,166,5,71,0,0,166,24,1,0,
0,0,167,168,5,83,0,0,168,169,5,71,0,0,169,170,5,78,0,0,170,26,1,0,0,0,171,
172,5,69,0,0,172,173,5,81,0,0,173,28,1,0,0,0,174,175,5,71,0,0,175,176,5,
84,0,0,176,30,1,0,0,0,177,178,5,71,0,0,178,179,5,84,0,0,179,180,5,69,0,0,
180,32,1,0,0,0,181,182,5,76,0,0,182,183,5,84,0,0,183,34,1,0,0,0,184,185,
5,76,0,0,185,186,5,84,0,0,186,187,5,69,0,0,187,36,1,0,0,0,188,189,5,65,0,
0,189,190,5,78,0,0,190,191,5,68,0,0,191,38,1,0,0,0,192,193,5,79,0,0,193,
194,5,82,0,0,194,40,1,0,0,0,195,196,5,88,0,0,196,197,5,79,0,0,197,198,5,
82,0,0,198,42,1,0,0,0,199,200,5,78,0,0,200,201,5,79,0,0,201,202,5,84,0,0,
202,44,1,0,0,0,203,204,5,83,0,0,204,205,5,78,0,0,205,206,5,84,0,0,206,46,
1,0,0,0,207,208,5,67,0,0,208,209,5,65,0,0,209,210,5,84,0,0,210,48,1,0,0,
0,211,212,5,84,0,0,212,213,5,79,0,0,213,214,5,83,0,0,214,50,1,0,0,0,215,
216,5,76,0,0,216,217,5,78,0,0,217,218,5,84,0,0,218,52,1,0,0,0,219,220,5,
76,0,0,220,221,5,73,0,0,221,222,5,78,0,0,222,54,1,0,0,0,223,224,5,76,0,0,
224,225,5,84,0,0,225,226,5,75,0,0,226,56,1,0,0,0,227,228,5,76,0,0,228,229,
5,82,0,0,229,230,5,75,0,0,230,58,1,0,0,0,231,232,5,84,0,0,232,233,5,79,0,
0,233,234,5,76,0,0,234,60,1,0,0,0,235,236,5,78,0,0,236,237,5,79,0,0,237,
238,5,80,0,0,238,62,1,0,0,0,239,240,5,66,0,0,240,241,5,82,0,0,241,64,1,0,
0,0,242,243,5,66,0,0,243,244,5,84,0,0,244,66,1,0,0,0,245,246,5,66,0,0,246,
247,5,70,0,0,247,68,1,0,0,0,248,249,5,76,0,0,249,250,5,68,0,0,250,251,5,
70,0,0,251,70,1,0,0,0,252,253,5,65,0,0,253,254,5,80,0,0,254,255,5,80,0,0,
255,72,1,0,0,0,256,257,5,82,0,0,257,258,5,69,0,0,258,259,5,84,0,0,259,74,
1,0,0,0,260,261,5,67,0,0,261,262,5,83,0,0,262,263,5,84,0,0,263,76,1,0,0,
0,264,265,5,73,0,0,265,266,5,78,0,0,266,267,5,79,0,0,267,78,1,0,0,0,268,
269,5,80,0,0,269,270,5,82,0,0,270,271,5,78,0,0,271,80,1,0,0,0,272,273,5,
83,0,0,273,274,5,84,0,0,274,275,5,75,0,0,275,82,1,0,0,0,276,277,5,83,0,0,
277,278,5,82,0,0,278,279,5,75,0,0,279,84,1,0,0,0,280,281,5,73,0,0,281,282,
5,78,0,0,282,283,5,80,0,0,283,86,1,0,0,0,284,285,5,76,0,0,285,286,5,69,0,
0,286,287,5,78,0,0,287,88,1,0,0,0,288,289,5,80,0,0,289,290,5,79,0,0,290,
291,5,87,0,0,291,90,1,0,0,0,292,293,5,91,0,0,293,92,1,0,0,0,294,295,5,93,
0,0,295,94,1,0,0,0,296,298,5,45,0,0,297,296,1,0,0,0,297,298,1,0,0,0,298,
300,1,0,0,0,299,301,7,0,0,0,300,299,1,0,0,0,301,302,1,0,0,0,302,300,1,0,
0,0,302,303,1,0,0,0,303,96,1,0,0,0,304,306,5,45,0,0,305,304,1,0,0,0,305,
306,1,0,0,0,306,308,1,0,0,0,307,309,7,0,0,0,308,307,1,0,0,0,309,310,1,0,
0,0,310,308,1,0,0,0,310,311,1,0,0,0,311,318,1,0,0,0,312,314,5,46,0,0,313,
315,7,0,0,0,314,313,1,0,0,0,315,316,1,0,0,0,316,314,1,0,0,0,316,317,1,0,
0,0,317,319,1,0,0,0,318,312,1,0,0,0,318,319,1,0,0,0,319,329,1,0,0,0,320,
322,7,1,0,0,321,323,7,2,0,0,322,321,1,0,0,0,322,323,1,0,0,0,323,325,1,0,
0,0,324,326,7,0,0,0,325,324,1,0,0,0,326,327,1,0,0,0,327,325,1,0,0,0,327,
328,1,0,0,0,328,330,1,0,0,0,329,320,1,0,0,0,329,330,1,0,0,0,330,98,1,0,0,
0,331,337,5,39,0,0,332,336,8,3,0,0,333,334,5,92,0,0,334,336,9,0,0,0,335,
332,1,0,0,0,335,333,1,0,0,0,336,339,1,0,0,0,337,335,1,0,0,0,337,338,1,0,
0,0,338,340,1,0,0,0,339,337,1,0,0,0,340,352,5,39,0,0,341,347,5,34,0,0,342,
346,8,4,0,0,343,344,5,92,0,0,344,346,9,0,0,0,345,342,1,0,0,0,345,343,1,0,
0,0,346,349,1,0,0,0,347,345,1,0,0,0,347,348,1,0,0,0,348,350,1,0,0,0,349,
347,1,0,0,0,350,352,5,34,0,0,351,331,1,0,0,0,351,341,1,0,0,0,352,100,1,0,
0,0,353,355,5,36,0,0,354,356,7,0,0,0,355,354,1,0,0,0,356,357,1,0,0,0,357,
355,1,0,0,0,357,358,1,0,0,0,358,102,1,0,0,0,359,360,5,36,0,0,360,361,5,70,
0,0,361,362,5,85,0,0,362,363,5,78,0,0,363,104,1,0,0,0,364,365,5,36,0,0,365,
366,5,69,0,0,366,367,5,78,0,0,367,368,5,68,0,0,368,106,1,0,0,0,369,371,7,
5,0,0,370,369,1,0,0,0,371,372,1,0,0,0,372,370,1,0,0,0,372,373,1,0,0,0,373,
374,1,0,0,0,374,375,6,53,0,0,375,108,1,0,0,0,376,380,5,59,0,0,377,379,8,
6,0,0,378,377,1,0,0,0,379,382,1,0,0,0,380,378,1,0,0,0,380,381,1,0,0,0,381,
383,1,0,0,0,382,380,1,0,0,0,383,384,6,54,0,0,384,110,1,0,0,0,385,386,5,112,
0,0,386,387,5,97,0,0,387,388,5,114,0,0,388,389,5,101,0,0,389,390,5,110,0,
0,390,391,5,116,0,0,391,392,5,58,0,0,392,112,1,0,0,0,393,394,5,97,0,0,394,
395,5,114,0,0,395,396,5,103,0,0,396,397,5,115,0,0,397,398,5,58,0,0,398,114,
1,0,0,0,399,403,7,7,0,0,400,402,7,8,0,0,401,400,1,0,0,0,402,405,1,0,0,0,
403,401,1,0,0,0,403,404,1,0,0,0,404,116,1,0,0,0,405,403,1,0,0,0,406,407,
5,44,0,0,407,118,1,0,0,0,19,0,297,302,305,310,316,318,322,327,329,335,337,
345,347,351,357,372,380,403,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class biesLexer extends antlr4.Lexer {

    static grammarFileName = "bies.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'INI'", "'HLT'", "'POP'", "'SWP'", "'LDV'", 
                         "'BLD'", "'BST'", "'ADD'", "'MUL'", "'DIV'", "'SUB'", 
                         "'NEG'", "'SGN'", "'EQ'", "'GT'", "'GTE'", "'LT'", 
                         "'LTE'", "'AND'", "'OR'", "'XOR'", "'NOT'", "'SNT'", 
                         "'CAT'", "'TOS'", "'LNT'", "'LIN'", "'LTK'", "'LRK'", 
                         "'TOL'", "'NOP'", "'BR'", "'BT'", "'BF'", "'LDF'", 
                         "'APP'", "'RET'", "'CST'", "'INO'", "'PRN'", "'STK'", 
                         "'SRK'", "'INP'", "'LEN'", "'POW'", "'['", "']'", 
                         null, null, null, null, "'$FUN'", "'$END'", null, 
                         null, "'parent:'", "'args:'", null, "','" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          "INT", "FLOAT", "STR", "FUNCTION", "FUN", "END", 
                          "WS", "COMMENT", "PARENT", "ARGS", "ID", "COMMA" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "INT", "FLOAT", 
                      "STR", "FUNCTION", "FUN", "END", "WS", "COMMENT", 
                      "PARENT", "ARGS", "ID", "COMMA" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

biesLexer.EOF = antlr4.Token.EOF;
biesLexer.T__0 = 1;
biesLexer.T__1 = 2;
biesLexer.T__2 = 3;
biesLexer.T__3 = 4;
biesLexer.T__4 = 5;
biesLexer.T__5 = 6;
biesLexer.T__6 = 7;
biesLexer.T__7 = 8;
biesLexer.T__8 = 9;
biesLexer.T__9 = 10;
biesLexer.T__10 = 11;
biesLexer.T__11 = 12;
biesLexer.T__12 = 13;
biesLexer.T__13 = 14;
biesLexer.T__14 = 15;
biesLexer.T__15 = 16;
biesLexer.T__16 = 17;
biesLexer.T__17 = 18;
biesLexer.T__18 = 19;
biesLexer.T__19 = 20;
biesLexer.T__20 = 21;
biesLexer.T__21 = 22;
biesLexer.T__22 = 23;
biesLexer.T__23 = 24;
biesLexer.T__24 = 25;
biesLexer.T__25 = 26;
biesLexer.T__26 = 27;
biesLexer.T__27 = 28;
biesLexer.T__28 = 29;
biesLexer.T__29 = 30;
biesLexer.T__30 = 31;
biesLexer.T__31 = 32;
biesLexer.T__32 = 33;
biesLexer.T__33 = 34;
biesLexer.T__34 = 35;
biesLexer.T__35 = 36;
biesLexer.T__36 = 37;
biesLexer.T__37 = 38;
biesLexer.T__38 = 39;
biesLexer.T__39 = 40;
biesLexer.T__40 = 41;
biesLexer.T__41 = 42;
biesLexer.T__42 = 43;
biesLexer.T__43 = 44;
biesLexer.T__44 = 45;
biesLexer.T__45 = 46;
biesLexer.T__46 = 47;
biesLexer.INT = 48;
biesLexer.FLOAT = 49;
biesLexer.STR = 50;
biesLexer.FUNCTION = 51;
biesLexer.FUN = 52;
biesLexer.END = 53;
biesLexer.WS = 54;
biesLexer.COMMENT = 55;
biesLexer.PARENT = 56;
biesLexer.ARGS = 57;
biesLexer.ID = 58;
biesLexer.COMMA = 59;



